# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  name: String
  ldapName: String
  roll: String!
  mobile: String
  isNewUser: Boolean!
}

type Report {
  id: String!
  description: String!
  createdAt: DateTime!
  post: Post
  comment: Comments
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Comments {
  id: String!
  content: String!
  createdAt: DateTime!

  """Visiblity state of announcements"""
  isHidden: Boolean!
  post: Post!
  commentReports: [Report!]
}

type Post {
  id: String!
  createdAt: DateTime!
  title: String!
  content: String!
  category: String!
  photo: String

  """Visiblity state of announcements"""
  isHidden: Boolean!
  location: String
  linkName: String
  Link: String
  postComments: [Comments!]
  postReports: [Report!]
}

type ReportReason {
  id: String!

  """Reason for the post bieng reported"""
  reason: String!

  """Reports severity count"""
  count: Float
}

type Query {
  getUsers: [User!]!
  FindAllposts: [Post!]!
  Findpost(Postid: String!): Post!
  getAllComments: [Comments!]!
  getComments(id: String!): Comments!
  reports: [Report!]!
  getReport(id: String!): Report!
  reportreasons: [ReportReason!]!
  reportreason(id: String!): ReportReason!
}

type Mutation {
  createUser(user: CreateUserInput!): User!
  CreatePost(postInput: CreatePostInput!): Post!
  updatePost(updatePostInput: UpdatePostInput!): Post!
  removePost(id: String!): Post!
  createComment(createCommentInput: CreateCommentInput!): Comments!
  updateComment(updateCommentInput: UpdateCommentInput!, id: String!): Comments!
  removeComment(id: String!): Comments!
  createReport(createReportInput: CreateReportInput!): Report!
  updateReport(updateReportInput: UpdateReportInput!): Report!
  removeReport(id: String!): Report!
  createReportreason(createReportreasonInput: CreateReportreasonInput!): ReportReason!
  updateReportreason(updateReportreasonInput: UpdateReportreasonInput!, id: String!): ReportReason!
  removeReportreason(id: String!): ReportReason!
}

input CreateUserInput {
  name: String!
  roll: String!
}

input CreatePostInput {
  title: String!
  content: String!
  linkName: String
  link: String
  isHidden: Boolean
  category: String!
  location: String
  Photo: String
}

input UpdatePostInput {
  postId: String!
  title: String!
  content: String!
  linkName: String
  link: String
  isHidden: Boolean
  category: String!
  location: String
  Photo: String
}

input CreateCommentInput {
  content: String!
  postId: String!

  """Visiblity state of announcements"""
  isHidden: Boolean!
}

input UpdateCommentInput {
  content: String!
  postId: String

  """Visiblity state of announcements"""
  isHidden: Boolean!
}

input CreateReportInput {
  description: String!
  id: String!
}

input UpdateReportInput {
  description: String!
  id: String!
  reportId: String!
}

input CreateReportreasonInput {
  """Reason for the post bieng reported"""
  reason: String!

  """Reports severity count"""
  count: Float
}

input UpdateReportreasonInput {
  """Reason for the post bieng reported"""
  reason: String!

  """Reports severity count"""
  count: Float
}